{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "proje_xception_denemesi_katman_dondurma.ipynb ",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "EKRknNbnckUj"
      },
      "source": [
        "\n",
        "import os\n",
        "import numpy as np\n",
        "import tensorflow as tf\n",
        "import matplotlib.pyplot as plt\n",
        "from keras.models import Model,Sequential\n",
        "from keras.applications import xception\n",
        "from keras.layers import Input, Flatten, Dense, Dropout, BatchNormalization\n",
        "from keras.layers import Conv2D, MaxPooling2D, AveragePooling2D, ZeroPadding2D,GlobalAveragePooling2D\n",
        "\n",
        "from keras.utils import np_utils\n",
        "from keras.preprocessing.image import ImageDataGenerator,img_to_array,load_img\n",
        "from keras.optimizers import Adam, SGD\n",
        "\n",
        "from keras.callbacks import ModelCheckpoint"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MnXltWztdDhk"
      },
      "source": [
        "\n"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-e03FHZMfQ3N",
        "outputId": "f3aab6e3-8936-4efc-893c-d03e52647900"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount(\"/content/drive\")"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/drive\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wqvyfgp-CDSQ"
      },
      "source": [
        "train_path=\"./drive/MyDrive/proje/train/\"\n",
        "test_path=\"./drive/MyDrive/proje/test/\""
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "N2DfbxWbBzUy",
        "outputId": "4043e2cc-1473-47bb-d218-1c804b75feed"
      },
      "source": [
        "img=load_img(train_path+\"Alert face/00000010_027.jpg\")\n",
        "plt.imshow(img)\n",
        "plt.axis(\"off\")\n",
        "plt.show()\n",
        "\n",
        "\n",
        "x=img_to_array(img)\n",
        "print(x.shape)"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "(925, 1024, 3)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "g-NWuXf-ff9N",
        "outputId": "a8e88ac1-a8e7-4504-d4dc-821e7404a618"
      },
      "source": [
        "\n",
        "trainDataGen=ImageDataGenerator(\n",
        "    rescale=1./255,\n",
        "     rotation_range=40,\n",
        "     width_shift_range=0.2,\n",
        "    height_shift_range=0.2,\n",
        "        shear_range=0.2,\n",
        "        zoom_range=0.2,\n",
        "        horizontal_flip=True,\n",
        "        fill_mode='nearest'  ,\n",
        "        \n",
        "    \n",
        "    validation_split=0.10\n",
        ")\n",
        "\n",
        "\n",
        "testDataGen=ImageDataGenerator(rescale=1./255)\n",
        "\n",
        "trainGen=trainDataGen.flow_from_directory(\n",
        "    train_path,\n",
        "    target_size=(299,299),\n",
        "    color_mode='rgb',\n",
        "    class_mode=\"categorical\",\n",
        "    batch_size=16,\n",
        "    subset=\"training\"\n",
        "\n",
        "\n",
        "\n",
        "    )\n",
        "\n",
        "\n",
        "valGen=trainDataGen.flow_from_directory(\n",
        "    train_path,\n",
        "    target_size=(299,299),\n",
        "    color_mode='rgb',\n",
        "    class_mode=\"categorical\",\n",
        "    batch_size=16,\n",
        "    subset=\"validation\"\n",
        ")\n",
        "\n",
        "testGen=testDataGen.flow_from_directory(\n",
        "    test_path,\n",
        "    target_size=(299,299),\n",
        "    color_mode='rgb',\n",
        "    class_mode=\"categorical\",\n",
        "    batch_size=1\n",
        "    )"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Found 815 images belonging to 6 classes.\n",
            "Found 89 images belonging to 6 classes.\n",
            "Found 227 images belonging to 6 classes.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tnsayMU5f5ND"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "P8RsjpZugauF",
        "outputId": "351dcac6-94b5-478e-f7fb-8097f1f2ea58"
      },
      "source": [
        "# Transfer Learning!!\n",
        "model = xception.Xception(weights='imagenet', include_top=False, input_shape=(299,299, 3))\n",
        "print (model.summary())"
      ],
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"xception\"\n",
            "__________________________________________________________________________________________________\n",
            "Layer (type)                    Output Shape         Param #     Connected to                     \n",
            "==================================================================================================\n",
            "input_3 (InputLayer)            [(None, 299, 299, 3) 0                                            \n",
            "__________________________________________________________________________________________________\n",
            "block1_conv1 (Conv2D)           (None, 149, 149, 32) 864         input_3[0][0]                    \n",
            "__________________________________________________________________________________________________\n",
            "block1_conv1_bn (BatchNormaliza (None, 149, 149, 32) 128         block1_conv1[0][0]               \n",
            "__________________________________________________________________________________________________\n",
            "block1_conv1_act (Activation)   (None, 149, 149, 32) 0           block1_conv1_bn[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block1_conv2 (Conv2D)           (None, 147, 147, 64) 18432       block1_conv1_act[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block1_conv2_bn (BatchNormaliza (None, 147, 147, 64) 256         block1_conv2[0][0]               \n",
            "__________________________________________________________________________________________________\n",
            "block1_conv2_act (Activation)   (None, 147, 147, 64) 0           block1_conv2_bn[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block2_sepconv1 (SeparableConv2 (None, 147, 147, 128 8768        block1_conv2_act[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block2_sepconv1_bn (BatchNormal (None, 147, 147, 128 512         block2_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block2_sepconv2_act (Activation (None, 147, 147, 128 0           block2_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block2_sepconv2 (SeparableConv2 (None, 147, 147, 128 17536       block2_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block2_sepconv2_bn (BatchNormal (None, 147, 147, 128 512         block2_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "conv2d_8 (Conv2D)               (None, 74, 74, 128)  8192        block1_conv2_act[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block2_pool (MaxPooling2D)      (None, 74, 74, 128)  0           block2_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "batch_normalization_8 (BatchNor (None, 74, 74, 128)  512         conv2d_8[0][0]                   \n",
            "__________________________________________________________________________________________________\n",
            "add_24 (Add)                    (None, 74, 74, 128)  0           block2_pool[0][0]                \n",
            "                                                                 batch_normalization_8[0][0]      \n",
            "__________________________________________________________________________________________________\n",
            "block3_sepconv1_act (Activation (None, 74, 74, 128)  0           add_24[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block3_sepconv1 (SeparableConv2 (None, 74, 74, 256)  33920       block3_sepconv1_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block3_sepconv1_bn (BatchNormal (None, 74, 74, 256)  1024        block3_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block3_sepconv2_act (Activation (None, 74, 74, 256)  0           block3_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block3_sepconv2 (SeparableConv2 (None, 74, 74, 256)  67840       block3_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block3_sepconv2_bn (BatchNormal (None, 74, 74, 256)  1024        block3_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "conv2d_9 (Conv2D)               (None, 37, 37, 256)  32768       add_24[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block3_pool (MaxPooling2D)      (None, 37, 37, 256)  0           block3_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "batch_normalization_9 (BatchNor (None, 37, 37, 256)  1024        conv2d_9[0][0]                   \n",
            "__________________________________________________________________________________________________\n",
            "add_25 (Add)                    (None, 37, 37, 256)  0           block3_pool[0][0]                \n",
            "                                                                 batch_normalization_9[0][0]      \n",
            "__________________________________________________________________________________________________\n",
            "block4_sepconv1_act (Activation (None, 37, 37, 256)  0           add_25[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block4_sepconv1 (SeparableConv2 (None, 37, 37, 728)  188672      block4_sepconv1_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block4_sepconv1_bn (BatchNormal (None, 37, 37, 728)  2912        block4_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block4_sepconv2_act (Activation (None, 37, 37, 728)  0           block4_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block4_sepconv2 (SeparableConv2 (None, 37, 37, 728)  536536      block4_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block4_sepconv2_bn (BatchNormal (None, 37, 37, 728)  2912        block4_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "conv2d_10 (Conv2D)              (None, 19, 19, 728)  186368      add_25[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block4_pool (MaxPooling2D)      (None, 19, 19, 728)  0           block4_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "batch_normalization_10 (BatchNo (None, 19, 19, 728)  2912        conv2d_10[0][0]                  \n",
            "__________________________________________________________________________________________________\n",
            "add_26 (Add)                    (None, 19, 19, 728)  0           block4_pool[0][0]                \n",
            "                                                                 batch_normalization_10[0][0]     \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv1_act (Activation (None, 19, 19, 728)  0           add_26[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv1 (SeparableConv2 (None, 19, 19, 728)  536536      block5_sepconv1_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv1_bn (BatchNormal (None, 19, 19, 728)  2912        block5_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv2_act (Activation (None, 19, 19, 728)  0           block5_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv2 (SeparableConv2 (None, 19, 19, 728)  536536      block5_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv2_bn (BatchNormal (None, 19, 19, 728)  2912        block5_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv3_act (Activation (None, 19, 19, 728)  0           block5_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv3 (SeparableConv2 (None, 19, 19, 728)  536536      block5_sepconv3_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv3_bn (BatchNormal (None, 19, 19, 728)  2912        block5_sepconv3[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "add_27 (Add)                    (None, 19, 19, 728)  0           block5_sepconv3_bn[0][0]         \n",
            "                                                                 add_26[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv1_act (Activation (None, 19, 19, 728)  0           add_27[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv1 (SeparableConv2 (None, 19, 19, 728)  536536      block6_sepconv1_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv1_bn (BatchNormal (None, 19, 19, 728)  2912        block6_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv2_act (Activation (None, 19, 19, 728)  0           block6_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv2 (SeparableConv2 (None, 19, 19, 728)  536536      block6_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv2_bn (BatchNormal (None, 19, 19, 728)  2912        block6_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv3_act (Activation (None, 19, 19, 728)  0           block6_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv3 (SeparableConv2 (None, 19, 19, 728)  536536      block6_sepconv3_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv3_bn (BatchNormal (None, 19, 19, 728)  2912        block6_sepconv3[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "add_28 (Add)                    (None, 19, 19, 728)  0           block6_sepconv3_bn[0][0]         \n",
            "                                                                 add_27[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv1_act (Activation (None, 19, 19, 728)  0           add_28[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv1 (SeparableConv2 (None, 19, 19, 728)  536536      block7_sepconv1_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv1_bn (BatchNormal (None, 19, 19, 728)  2912        block7_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv2_act (Activation (None, 19, 19, 728)  0           block7_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv2 (SeparableConv2 (None, 19, 19, 728)  536536      block7_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv2_bn (BatchNormal (None, 19, 19, 728)  2912        block7_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv3_act (Activation (None, 19, 19, 728)  0           block7_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv3 (SeparableConv2 (None, 19, 19, 728)  536536      block7_sepconv3_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv3_bn (BatchNormal (None, 19, 19, 728)  2912        block7_sepconv3[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "add_29 (Add)                    (None, 19, 19, 728)  0           block7_sepconv3_bn[0][0]         \n",
            "                                                                 add_28[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv1_act (Activation (None, 19, 19, 728)  0           add_29[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv1 (SeparableConv2 (None, 19, 19, 728)  536536      block8_sepconv1_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv1_bn (BatchNormal (None, 19, 19, 728)  2912        block8_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv2_act (Activation (None, 19, 19, 728)  0           block8_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv2 (SeparableConv2 (None, 19, 19, 728)  536536      block8_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv2_bn (BatchNormal (None, 19, 19, 728)  2912        block8_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv3_act (Activation (None, 19, 19, 728)  0           block8_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv3 (SeparableConv2 (None, 19, 19, 728)  536536      block8_sepconv3_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv3_bn (BatchNormal (None, 19, 19, 728)  2912        block8_sepconv3[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "add_30 (Add)                    (None, 19, 19, 728)  0           block8_sepconv3_bn[0][0]         \n",
            "                                                                 add_29[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv1_act (Activation (None, 19, 19, 728)  0           add_30[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv1 (SeparableConv2 (None, 19, 19, 728)  536536      block9_sepconv1_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv1_bn (BatchNormal (None, 19, 19, 728)  2912        block9_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv2_act (Activation (None, 19, 19, 728)  0           block9_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv2 (SeparableConv2 (None, 19, 19, 728)  536536      block9_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv2_bn (BatchNormal (None, 19, 19, 728)  2912        block9_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv3_act (Activation (None, 19, 19, 728)  0           block9_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv3 (SeparableConv2 (None, 19, 19, 728)  536536      block9_sepconv3_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv3_bn (BatchNormal (None, 19, 19, 728)  2912        block9_sepconv3[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "add_31 (Add)                    (None, 19, 19, 728)  0           block9_sepconv3_bn[0][0]         \n",
            "                                                                 add_30[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv1_act (Activatio (None, 19, 19, 728)  0           add_31[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv1 (SeparableConv (None, 19, 19, 728)  536536      block10_sepconv1_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv1_bn (BatchNorma (None, 19, 19, 728)  2912        block10_sepconv1[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv2_act (Activatio (None, 19, 19, 728)  0           block10_sepconv1_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv2 (SeparableConv (None, 19, 19, 728)  536536      block10_sepconv2_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv2_bn (BatchNorma (None, 19, 19, 728)  2912        block10_sepconv2[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv3_act (Activatio (None, 19, 19, 728)  0           block10_sepconv2_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv3 (SeparableConv (None, 19, 19, 728)  536536      block10_sepconv3_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv3_bn (BatchNorma (None, 19, 19, 728)  2912        block10_sepconv3[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "add_32 (Add)                    (None, 19, 19, 728)  0           block10_sepconv3_bn[0][0]        \n",
            "                                                                 add_31[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv1_act (Activatio (None, 19, 19, 728)  0           add_32[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv1 (SeparableConv (None, 19, 19, 728)  536536      block11_sepconv1_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv1_bn (BatchNorma (None, 19, 19, 728)  2912        block11_sepconv1[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv2_act (Activatio (None, 19, 19, 728)  0           block11_sepconv1_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv2 (SeparableConv (None, 19, 19, 728)  536536      block11_sepconv2_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv2_bn (BatchNorma (None, 19, 19, 728)  2912        block11_sepconv2[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv3_act (Activatio (None, 19, 19, 728)  0           block11_sepconv2_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv3 (SeparableConv (None, 19, 19, 728)  536536      block11_sepconv3_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv3_bn (BatchNorma (None, 19, 19, 728)  2912        block11_sepconv3[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "add_33 (Add)                    (None, 19, 19, 728)  0           block11_sepconv3_bn[0][0]        \n",
            "                                                                 add_32[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv1_act (Activatio (None, 19, 19, 728)  0           add_33[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv1 (SeparableConv (None, 19, 19, 728)  536536      block12_sepconv1_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv1_bn (BatchNorma (None, 19, 19, 728)  2912        block12_sepconv1[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv2_act (Activatio (None, 19, 19, 728)  0           block12_sepconv1_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv2 (SeparableConv (None, 19, 19, 728)  536536      block12_sepconv2_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv2_bn (BatchNorma (None, 19, 19, 728)  2912        block12_sepconv2[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv3_act (Activatio (None, 19, 19, 728)  0           block12_sepconv2_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv3 (SeparableConv (None, 19, 19, 728)  536536      block12_sepconv3_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv3_bn (BatchNorma (None, 19, 19, 728)  2912        block12_sepconv3[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "add_34 (Add)                    (None, 19, 19, 728)  0           block12_sepconv3_bn[0][0]        \n",
            "                                                                 add_33[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block13_sepconv1_act (Activatio (None, 19, 19, 728)  0           add_34[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block13_sepconv1 (SeparableConv (None, 19, 19, 728)  536536      block13_sepconv1_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block13_sepconv1_bn (BatchNorma (None, 19, 19, 728)  2912        block13_sepconv1[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block13_sepconv2_act (Activatio (None, 19, 19, 728)  0           block13_sepconv1_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block13_sepconv2 (SeparableConv (None, 19, 19, 1024) 752024      block13_sepconv2_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block13_sepconv2_bn (BatchNorma (None, 19, 19, 1024) 4096        block13_sepconv2[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "conv2d_11 (Conv2D)              (None, 10, 10, 1024) 745472      add_34[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block13_pool (MaxPooling2D)     (None, 10, 10, 1024) 0           block13_sepconv2_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "batch_normalization_11 (BatchNo (None, 10, 10, 1024) 4096        conv2d_11[0][0]                  \n",
            "__________________________________________________________________________________________________\n",
            "add_35 (Add)                    (None, 10, 10, 1024) 0           block13_pool[0][0]               \n",
            "                                                                 batch_normalization_11[0][0]     \n",
            "__________________________________________________________________________________________________\n",
            "block14_sepconv1 (SeparableConv (None, 10, 10, 1536) 1582080     add_35[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block14_sepconv1_bn (BatchNorma (None, 10, 10, 1536) 6144        block14_sepconv1[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block14_sepconv1_act (Activatio (None, 10, 10, 1536) 0           block14_sepconv1_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block14_sepconv2 (SeparableConv (None, 10, 10, 2048) 3159552     block14_sepconv1_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block14_sepconv2_bn (BatchNorma (None, 10, 10, 2048) 8192        block14_sepconv2[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block14_sepconv2_act (Activatio (None, 10, 10, 2048) 0           block14_sepconv2_bn[0][0]        \n",
            "==================================================================================================\n",
            "Total params: 20,861,480\n",
            "Trainable params: 20,806,952\n",
            "Non-trainable params: 54,528\n",
            "__________________________________________________________________________________________________\n",
            "None\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "75q3-LQiiylb"
      },
      "source": [
        "# yeni katmanlar ekleyelim\n",
        "x=model.output\n",
        "x=GlobalAveragePooling2D()(x)\n",
        "x=Dense(32,activation='relu')(x)\n",
        "x=Dropout(0.4)(x)\n",
        "x=Dense(16,activation='relu')(x)\n",
        "x=Dropout(0.2)(x)\n",
        "output=Dense(6,activation='softmax')(x)"
      ],
      "execution_count": 50,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UuxCm2RFjJHs"
      },
      "source": [
        "New_Model=Model(model.input,output)"
      ],
      "execution_count": 51,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fP_NMJ0OjQ4o"
      },
      "source": [
        "# tüm layerları donduralım\n",
        "for layers in New_Model.layers[:93]:\n",
        "\tlayers.trainable=False"
      ],
      "execution_count": 52,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "O7IXN4Fz_nFk",
        "outputId": "f100c578-c74f-4ea3-d586-d6877da7a81a"
      },
      "source": [
        "for layers in New_Model.layers[:93]:\n",
        "  print(layers)"
      ],
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<keras.engine.input_layer.InputLayer object at 0x7fa391207490>\n",
            "<keras.layers.convolutional.Conv2D object at 0x7fa39120b2d0>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa39120bed0>\n",
            "<keras.layers.core.Activation object at 0x7fa39121f0d0>\n",
            "<keras.layers.convolutional.Conv2D object at 0x7fa5e22b1b90>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa39121ff90>\n",
            "<keras.layers.core.Activation object at 0x7fa5d9125750>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa390f68590>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d92f6750>\n",
            "<keras.layers.core.Activation object at 0x7fa5d92d0210>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa5d92de450>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d92d0350>\n",
            "<keras.layers.convolutional.Conv2D object at 0x7fa5c02dee90>\n",
            "<keras.layers.pooling.MaxPooling2D object at 0x7fa5d92cc310>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d9125810>\n",
            "<keras.layers.merge.Add object at 0x7fa5d92cc2d0>\n",
            "<keras.layers.core.Activation object at 0x7fa5d92d81d0>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa5d959c3d0>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5c02dea10>\n",
            "<keras.layers.core.Activation object at 0x7fa5d92c7a50>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa5d9591810>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d958a910>\n",
            "<keras.layers.convolutional.Conv2D object at 0x7fa5d959cb50>\n",
            "<keras.layers.pooling.MaxPooling2D object at 0x7fa5d95a61d0>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d95a4a10>\n",
            "<keras.layers.merge.Add object at 0x7fa5d95cea90>\n",
            "<keras.layers.core.Activation object at 0x7fa5d95ab410>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa5d95f3190>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d92d8f90>\n",
            "<keras.layers.core.Activation object at 0x7fa5d95c0390>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa5d95e4f10>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d95c9110>\n",
            "<keras.layers.convolutional.Conv2D object at 0x7fa5d95ab5d0>\n",
            "<keras.layers.pooling.MaxPooling2D object at 0x7fa5d95c9090>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d959c690>\n",
            "<keras.layers.merge.Add object at 0x7fa5d91c1690>\n",
            "<keras.layers.core.Activation object at 0x7fa5d95d8f10>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa5d95cf210>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d95ced10>\n",
            "<keras.layers.core.Activation object at 0x7fa5d95d9bd0>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa5d91d3550>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d91d8a90>\n",
            "<keras.layers.core.Activation object at 0x7fa5d91e4350>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa5d91e3750>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d91f4190>\n",
            "<keras.layers.merge.Add object at 0x7fa5d91f40d0>\n",
            "<keras.layers.core.Activation object at 0x7fa5d91e4850>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa5d91d6c50>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d91c62d0>\n",
            "<keras.layers.core.Activation object at 0x7fa5d91f9410>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa5d91ee210>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d95922d0>\n",
            "<keras.layers.core.Activation object at 0x7fa5d95e4490>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa5d91e4750>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d95a6f10>\n",
            "<keras.layers.merge.Add object at 0x7fa5d92de390>\n",
            "<keras.layers.core.Activation object at 0x7fa5d91fd3d0>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa5d92c7d50>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5d91d6bd0>\n",
            "<keras.layers.core.Activation object at 0x7fa5d95a4410>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa391a86510>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa391a8bc10>\n",
            "<keras.layers.core.Activation object at 0x7fa391a9c810>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa391a91810>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa391a99c50>\n",
            "<keras.layers.merge.Add object at 0x7fa5d92d0890>\n",
            "<keras.layers.core.Activation object at 0x7fa5d92d0d10>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa391aa77d0>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa5c02c3950>\n",
            "<keras.layers.core.Activation object at 0x7fa391a45ad0>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa391ab7690>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa391a45d90>\n",
            "<keras.layers.core.Activation object at 0x7fa391a4b6d0>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa391a4ba10>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa391aa4350>\n",
            "<keras.layers.merge.Add object at 0x7fa391a6ee50>\n",
            "<keras.layers.core.Activation object at 0x7fa391aa7550>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa391a4fe50>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa391a4f8d0>\n",
            "<keras.layers.core.Activation object at 0x7fa391a80bd0>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa391a62110>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa391a80f10>\n",
            "<keras.layers.core.Activation object at 0x7fa391a03750>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa391a03b10>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa391a1f210>\n",
            "<keras.layers.merge.Add object at 0x7fa391a1f5d0>\n",
            "<keras.layers.core.Activation object at 0x7fa391a18c90>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa391a1d990>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa391a72110>\n",
            "<keras.layers.core.Activation object at 0x7fa391a0b350>\n",
            "<keras.layers.convolutional.SeparableConv2D object at 0x7fa391a1d810>\n",
            "<keras.layers.normalization_v2.BatchNormalization object at 0x7fa391a6e950>\n",
            "<keras.layers.core.Activation object at 0x7fa391a4fb90>\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PgrBBVUmjfpD"
      },
      "source": [
        "\n",
        "#import os.path\n",
        "#if os.path.exists(\"xeption_agırlık.h5\"):\n",
        " #       print (\"loading \", \"xeption_agırlık.h5\")\n",
        "  #      model.load_weights('xeption_agırlık.h5')\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IdW3gTjEjgn0"
      },
      "source": [
        "#checkpoint = ModelCheckpoint('xeption_agırlık.h5',verbose=1,save_best_only=True,)"
      ],
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OIIi6aUkj9q0",
        "outputId": "2efd2152-e7cb-4fdc-fb5a-e643803b50b1"
      },
      "source": [
        "print (New_Model.summary())"
      ],
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"model_4\"\n",
            "__________________________________________________________________________________________________\n",
            "Layer (type)                    Output Shape         Param #     Connected to                     \n",
            "==================================================================================================\n",
            "input_3 (InputLayer)            [(None, 299, 299, 3) 0                                            \n",
            "__________________________________________________________________________________________________\n",
            "block1_conv1 (Conv2D)           (None, 149, 149, 32) 864         input_3[0][0]                    \n",
            "__________________________________________________________________________________________________\n",
            "block1_conv1_bn (BatchNormaliza (None, 149, 149, 32) 128         block1_conv1[0][0]               \n",
            "__________________________________________________________________________________________________\n",
            "block1_conv1_act (Activation)   (None, 149, 149, 32) 0           block1_conv1_bn[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block1_conv2 (Conv2D)           (None, 147, 147, 64) 18432       block1_conv1_act[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block1_conv2_bn (BatchNormaliza (None, 147, 147, 64) 256         block1_conv2[0][0]               \n",
            "__________________________________________________________________________________________________\n",
            "block1_conv2_act (Activation)   (None, 147, 147, 64) 0           block1_conv2_bn[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block2_sepconv1 (SeparableConv2 (None, 147, 147, 128 8768        block1_conv2_act[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block2_sepconv1_bn (BatchNormal (None, 147, 147, 128 512         block2_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block2_sepconv2_act (Activation (None, 147, 147, 128 0           block2_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block2_sepconv2 (SeparableConv2 (None, 147, 147, 128 17536       block2_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block2_sepconv2_bn (BatchNormal (None, 147, 147, 128 512         block2_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "conv2d_8 (Conv2D)               (None, 74, 74, 128)  8192        block1_conv2_act[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block2_pool (MaxPooling2D)      (None, 74, 74, 128)  0           block2_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "batch_normalization_8 (BatchNor (None, 74, 74, 128)  512         conv2d_8[0][0]                   \n",
            "__________________________________________________________________________________________________\n",
            "add_24 (Add)                    (None, 74, 74, 128)  0           block2_pool[0][0]                \n",
            "                                                                 batch_normalization_8[0][0]      \n",
            "__________________________________________________________________________________________________\n",
            "block3_sepconv1_act (Activation (None, 74, 74, 128)  0           add_24[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block3_sepconv1 (SeparableConv2 (None, 74, 74, 256)  33920       block3_sepconv1_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block3_sepconv1_bn (BatchNormal (None, 74, 74, 256)  1024        block3_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block3_sepconv2_act (Activation (None, 74, 74, 256)  0           block3_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block3_sepconv2 (SeparableConv2 (None, 74, 74, 256)  67840       block3_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block3_sepconv2_bn (BatchNormal (None, 74, 74, 256)  1024        block3_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "conv2d_9 (Conv2D)               (None, 37, 37, 256)  32768       add_24[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block3_pool (MaxPooling2D)      (None, 37, 37, 256)  0           block3_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "batch_normalization_9 (BatchNor (None, 37, 37, 256)  1024        conv2d_9[0][0]                   \n",
            "__________________________________________________________________________________________________\n",
            "add_25 (Add)                    (None, 37, 37, 256)  0           block3_pool[0][0]                \n",
            "                                                                 batch_normalization_9[0][0]      \n",
            "__________________________________________________________________________________________________\n",
            "block4_sepconv1_act (Activation (None, 37, 37, 256)  0           add_25[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block4_sepconv1 (SeparableConv2 (None, 37, 37, 728)  188672      block4_sepconv1_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block4_sepconv1_bn (BatchNormal (None, 37, 37, 728)  2912        block4_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block4_sepconv2_act (Activation (None, 37, 37, 728)  0           block4_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block4_sepconv2 (SeparableConv2 (None, 37, 37, 728)  536536      block4_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block4_sepconv2_bn (BatchNormal (None, 37, 37, 728)  2912        block4_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "conv2d_10 (Conv2D)              (None, 19, 19, 728)  186368      add_25[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block4_pool (MaxPooling2D)      (None, 19, 19, 728)  0           block4_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "batch_normalization_10 (BatchNo (None, 19, 19, 728)  2912        conv2d_10[0][0]                  \n",
            "__________________________________________________________________________________________________\n",
            "add_26 (Add)                    (None, 19, 19, 728)  0           block4_pool[0][0]                \n",
            "                                                                 batch_normalization_10[0][0]     \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv1_act (Activation (None, 19, 19, 728)  0           add_26[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv1 (SeparableConv2 (None, 19, 19, 728)  536536      block5_sepconv1_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv1_bn (BatchNormal (None, 19, 19, 728)  2912        block5_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv2_act (Activation (None, 19, 19, 728)  0           block5_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv2 (SeparableConv2 (None, 19, 19, 728)  536536      block5_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv2_bn (BatchNormal (None, 19, 19, 728)  2912        block5_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv3_act (Activation (None, 19, 19, 728)  0           block5_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv3 (SeparableConv2 (None, 19, 19, 728)  536536      block5_sepconv3_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block5_sepconv3_bn (BatchNormal (None, 19, 19, 728)  2912        block5_sepconv3[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "add_27 (Add)                    (None, 19, 19, 728)  0           block5_sepconv3_bn[0][0]         \n",
            "                                                                 add_26[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv1_act (Activation (None, 19, 19, 728)  0           add_27[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv1 (SeparableConv2 (None, 19, 19, 728)  536536      block6_sepconv1_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv1_bn (BatchNormal (None, 19, 19, 728)  2912        block6_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv2_act (Activation (None, 19, 19, 728)  0           block6_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv2 (SeparableConv2 (None, 19, 19, 728)  536536      block6_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv2_bn (BatchNormal (None, 19, 19, 728)  2912        block6_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv3_act (Activation (None, 19, 19, 728)  0           block6_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv3 (SeparableConv2 (None, 19, 19, 728)  536536      block6_sepconv3_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block6_sepconv3_bn (BatchNormal (None, 19, 19, 728)  2912        block6_sepconv3[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "add_28 (Add)                    (None, 19, 19, 728)  0           block6_sepconv3_bn[0][0]         \n",
            "                                                                 add_27[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv1_act (Activation (None, 19, 19, 728)  0           add_28[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv1 (SeparableConv2 (None, 19, 19, 728)  536536      block7_sepconv1_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv1_bn (BatchNormal (None, 19, 19, 728)  2912        block7_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv2_act (Activation (None, 19, 19, 728)  0           block7_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv2 (SeparableConv2 (None, 19, 19, 728)  536536      block7_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv2_bn (BatchNormal (None, 19, 19, 728)  2912        block7_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv3_act (Activation (None, 19, 19, 728)  0           block7_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv3 (SeparableConv2 (None, 19, 19, 728)  536536      block7_sepconv3_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block7_sepconv3_bn (BatchNormal (None, 19, 19, 728)  2912        block7_sepconv3[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "add_29 (Add)                    (None, 19, 19, 728)  0           block7_sepconv3_bn[0][0]         \n",
            "                                                                 add_28[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv1_act (Activation (None, 19, 19, 728)  0           add_29[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv1 (SeparableConv2 (None, 19, 19, 728)  536536      block8_sepconv1_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv1_bn (BatchNormal (None, 19, 19, 728)  2912        block8_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv2_act (Activation (None, 19, 19, 728)  0           block8_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv2 (SeparableConv2 (None, 19, 19, 728)  536536      block8_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv2_bn (BatchNormal (None, 19, 19, 728)  2912        block8_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv3_act (Activation (None, 19, 19, 728)  0           block8_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv3 (SeparableConv2 (None, 19, 19, 728)  536536      block8_sepconv3_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block8_sepconv3_bn (BatchNormal (None, 19, 19, 728)  2912        block8_sepconv3[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "add_30 (Add)                    (None, 19, 19, 728)  0           block8_sepconv3_bn[0][0]         \n",
            "                                                                 add_29[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv1_act (Activation (None, 19, 19, 728)  0           add_30[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv1 (SeparableConv2 (None, 19, 19, 728)  536536      block9_sepconv1_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv1_bn (BatchNormal (None, 19, 19, 728)  2912        block9_sepconv1[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv2_act (Activation (None, 19, 19, 728)  0           block9_sepconv1_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv2 (SeparableConv2 (None, 19, 19, 728)  536536      block9_sepconv2_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv2_bn (BatchNormal (None, 19, 19, 728)  2912        block9_sepconv2[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv3_act (Activation (None, 19, 19, 728)  0           block9_sepconv2_bn[0][0]         \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv3 (SeparableConv2 (None, 19, 19, 728)  536536      block9_sepconv3_act[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block9_sepconv3_bn (BatchNormal (None, 19, 19, 728)  2912        block9_sepconv3[0][0]            \n",
            "__________________________________________________________________________________________________\n",
            "add_31 (Add)                    (None, 19, 19, 728)  0           block9_sepconv3_bn[0][0]         \n",
            "                                                                 add_30[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv1_act (Activatio (None, 19, 19, 728)  0           add_31[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv1 (SeparableConv (None, 19, 19, 728)  536536      block10_sepconv1_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv1_bn (BatchNorma (None, 19, 19, 728)  2912        block10_sepconv1[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv2_act (Activatio (None, 19, 19, 728)  0           block10_sepconv1_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv2 (SeparableConv (None, 19, 19, 728)  536536      block10_sepconv2_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv2_bn (BatchNorma (None, 19, 19, 728)  2912        block10_sepconv2[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv3_act (Activatio (None, 19, 19, 728)  0           block10_sepconv2_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv3 (SeparableConv (None, 19, 19, 728)  536536      block10_sepconv3_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block10_sepconv3_bn (BatchNorma (None, 19, 19, 728)  2912        block10_sepconv3[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "add_32 (Add)                    (None, 19, 19, 728)  0           block10_sepconv3_bn[0][0]        \n",
            "                                                                 add_31[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv1_act (Activatio (None, 19, 19, 728)  0           add_32[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv1 (SeparableConv (None, 19, 19, 728)  536536      block11_sepconv1_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv1_bn (BatchNorma (None, 19, 19, 728)  2912        block11_sepconv1[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv2_act (Activatio (None, 19, 19, 728)  0           block11_sepconv1_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv2 (SeparableConv (None, 19, 19, 728)  536536      block11_sepconv2_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv2_bn (BatchNorma (None, 19, 19, 728)  2912        block11_sepconv2[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv3_act (Activatio (None, 19, 19, 728)  0           block11_sepconv2_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv3 (SeparableConv (None, 19, 19, 728)  536536      block11_sepconv3_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block11_sepconv3_bn (BatchNorma (None, 19, 19, 728)  2912        block11_sepconv3[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "add_33 (Add)                    (None, 19, 19, 728)  0           block11_sepconv3_bn[0][0]        \n",
            "                                                                 add_32[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv1_act (Activatio (None, 19, 19, 728)  0           add_33[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv1 (SeparableConv (None, 19, 19, 728)  536536      block12_sepconv1_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv1_bn (BatchNorma (None, 19, 19, 728)  2912        block12_sepconv1[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv2_act (Activatio (None, 19, 19, 728)  0           block12_sepconv1_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv2 (SeparableConv (None, 19, 19, 728)  536536      block12_sepconv2_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv2_bn (BatchNorma (None, 19, 19, 728)  2912        block12_sepconv2[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv3_act (Activatio (None, 19, 19, 728)  0           block12_sepconv2_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv3 (SeparableConv (None, 19, 19, 728)  536536      block12_sepconv3_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block12_sepconv3_bn (BatchNorma (None, 19, 19, 728)  2912        block12_sepconv3[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "add_34 (Add)                    (None, 19, 19, 728)  0           block12_sepconv3_bn[0][0]        \n",
            "                                                                 add_33[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block13_sepconv1_act (Activatio (None, 19, 19, 728)  0           add_34[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block13_sepconv1 (SeparableConv (None, 19, 19, 728)  536536      block13_sepconv1_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block13_sepconv1_bn (BatchNorma (None, 19, 19, 728)  2912        block13_sepconv1[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block13_sepconv2_act (Activatio (None, 19, 19, 728)  0           block13_sepconv1_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block13_sepconv2 (SeparableConv (None, 19, 19, 1024) 752024      block13_sepconv2_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block13_sepconv2_bn (BatchNorma (None, 19, 19, 1024) 4096        block13_sepconv2[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "conv2d_11 (Conv2D)              (None, 10, 10, 1024) 745472      add_34[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block13_pool (MaxPooling2D)     (None, 10, 10, 1024) 0           block13_sepconv2_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "batch_normalization_11 (BatchNo (None, 10, 10, 1024) 4096        conv2d_11[0][0]                  \n",
            "__________________________________________________________________________________________________\n",
            "add_35 (Add)                    (None, 10, 10, 1024) 0           block13_pool[0][0]               \n",
            "                                                                 batch_normalization_11[0][0]     \n",
            "__________________________________________________________________________________________________\n",
            "block14_sepconv1 (SeparableConv (None, 10, 10, 1536) 1582080     add_35[0][0]                     \n",
            "__________________________________________________________________________________________________\n",
            "block14_sepconv1_bn (BatchNorma (None, 10, 10, 1536) 6144        block14_sepconv1[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block14_sepconv1_act (Activatio (None, 10, 10, 1536) 0           block14_sepconv1_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "block14_sepconv2 (SeparableConv (None, 10, 10, 2048) 3159552     block14_sepconv1_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "block14_sepconv2_bn (BatchNorma (None, 10, 10, 2048) 8192        block14_sepconv2[0][0]           \n",
            "__________________________________________________________________________________________________\n",
            "block14_sepconv2_act (Activatio (None, 10, 10, 2048) 0           block14_sepconv2_bn[0][0]        \n",
            "__________________________________________________________________________________________________\n",
            "global_average_pooling2d_7 (Glo (None, 2048)         0           block14_sepconv2_act[0][0]       \n",
            "__________________________________________________________________________________________________\n",
            "dense_19 (Dense)                (None, 32)           65568       global_average_pooling2d_7[0][0] \n",
            "__________________________________________________________________________________________________\n",
            "dropout_12 (Dropout)            (None, 32)           0           dense_19[0][0]                   \n",
            "__________________________________________________________________________________________________\n",
            "dense_20 (Dense)                (None, 16)           528         dropout_12[0][0]                 \n",
            "__________________________________________________________________________________________________\n",
            "dropout_13 (Dropout)            (None, 16)           0           dense_20[0][0]                   \n",
            "__________________________________________________________________________________________________\n",
            "dense_21 (Dense)                (None, 6)            102         dropout_13[0][0]                 \n",
            "==================================================================================================\n",
            "Total params: 20,927,678\n",
            "Trainable params: 10,620,526\n",
            "Non-trainable params: 10,307,152\n",
            "__________________________________________________________________________________________________\n",
            "None\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tbuKqd-mkMcY"
      },
      "source": [
        "New_Model.compile(optimizer='adam', loss='categorical_crossentropy',metrics=[\"accuracy\"])"
      ],
      "execution_count": 55,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aTEIGrf2kQHS",
        "outputId": "4673c512-beb9-49fa-9c7f-bc4487c90796"
      },
      "source": [
        "history=New_Model.fit( \n",
        "    trainGen,\n",
        "    steps_per_epoch=trainGen.samples//16,\n",
        "    epochs=30,\n",
        "    validation_data=valGen,\n",
        "    validation_steps=valGen.samples//16,\n",
        "    #shuffle=True,\n",
        "    #callbacks=[checkpoint]\n",
        "    )"
      ],
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/30\n",
            "50/50 [==============================] - 36s 578ms/step - loss: 1.4827 - accuracy: 0.3660 - val_loss: 3.4094 - val_accuracy: 0.3875\n",
            "Epoch 2/30\n",
            "50/50 [==============================] - 26s 517ms/step - loss: 1.0651 - accuracy: 0.5920 - val_loss: 2.4074 - val_accuracy: 0.3750\n",
            "Epoch 3/30\n",
            "50/50 [==============================] - 26s 524ms/step - loss: 1.0211 - accuracy: 0.6069 - val_loss: 2.8322 - val_accuracy: 0.3125\n",
            "Epoch 4/30\n",
            "50/50 [==============================] - 26s 516ms/step - loss: 0.9420 - accuracy: 0.6667 - val_loss: 2.4941 - val_accuracy: 0.3625\n",
            "Epoch 5/30\n",
            "50/50 [==============================] - 26s 513ms/step - loss: 0.8776 - accuracy: 0.6578 - val_loss: 3.0832 - val_accuracy: 0.3500\n",
            "Epoch 6/30\n",
            "50/50 [==============================] - 26s 521ms/step - loss: 0.8143 - accuracy: 0.7165 - val_loss: 2.8904 - val_accuracy: 0.3250\n",
            "Epoch 7/30\n",
            "50/50 [==============================] - 27s 530ms/step - loss: 0.9633 - accuracy: 0.6464 - val_loss: 2.5489 - val_accuracy: 0.2875\n",
            "Epoch 8/30\n",
            "50/50 [==============================] - 28s 551ms/step - loss: 0.8720 - accuracy: 0.6596 - val_loss: 2.2408 - val_accuracy: 0.2500\n",
            "Epoch 9/30\n",
            "50/50 [==============================] - 26s 518ms/step - loss: 0.6792 - accuracy: 0.7334 - val_loss: 1.9314 - val_accuracy: 0.3000\n",
            "Epoch 10/30\n",
            "50/50 [==============================] - 26s 518ms/step - loss: 0.7731 - accuracy: 0.7040 - val_loss: 2.4501 - val_accuracy: 0.3375\n",
            "Epoch 11/30\n",
            "50/50 [==============================] - 26s 520ms/step - loss: 0.7078 - accuracy: 0.7268 - val_loss: 2.7704 - val_accuracy: 0.3875\n",
            "Epoch 12/30\n",
            "50/50 [==============================] - 26s 516ms/step - loss: 0.6894 - accuracy: 0.7467 - val_loss: 3.9395 - val_accuracy: 0.2875\n",
            "Epoch 13/30\n",
            "50/50 [==============================] - 26s 518ms/step - loss: 0.7346 - accuracy: 0.7315 - val_loss: 2.1070 - val_accuracy: 0.3625\n",
            "Epoch 14/30\n",
            "50/50 [==============================] - 25s 499ms/step - loss: 0.7095 - accuracy: 0.7021 - val_loss: 3.0611 - val_accuracy: 0.4000\n",
            "Epoch 15/30\n",
            "50/50 [==============================] - 25s 503ms/step - loss: 0.6533 - accuracy: 0.7773 - val_loss: 2.8265 - val_accuracy: 0.2750\n",
            "Epoch 16/30\n",
            "50/50 [==============================] - 25s 497ms/step - loss: 0.6262 - accuracy: 0.7520 - val_loss: 4.8890 - val_accuracy: 0.3500\n",
            "Epoch 17/30\n",
            "50/50 [==============================] - 25s 504ms/step - loss: 0.6803 - accuracy: 0.7505 - val_loss: 3.8103 - val_accuracy: 0.3625\n",
            "Epoch 18/30\n",
            "50/50 [==============================] - 25s 502ms/step - loss: 0.5571 - accuracy: 0.7661 - val_loss: 2.9717 - val_accuracy: 0.3000\n",
            "Epoch 19/30\n",
            "50/50 [==============================] - 25s 503ms/step - loss: 0.6046 - accuracy: 0.7581 - val_loss: 2.7978 - val_accuracy: 0.3125\n",
            "Epoch 20/30\n",
            "50/50 [==============================] - 25s 506ms/step - loss: 0.4740 - accuracy: 0.8150 - val_loss: 4.6542 - val_accuracy: 0.3625\n",
            "Epoch 21/30\n",
            "50/50 [==============================] - 25s 497ms/step - loss: 0.4952 - accuracy: 0.7939 - val_loss: 4.0629 - val_accuracy: 0.3250\n",
            "Epoch 22/30\n",
            "50/50 [==============================] - 25s 504ms/step - loss: 0.6131 - accuracy: 0.7703 - val_loss: 2.2434 - val_accuracy: 0.3125\n",
            "Epoch 23/30\n",
            "50/50 [==============================] - 25s 500ms/step - loss: 0.5565 - accuracy: 0.7577 - val_loss: 2.6169 - val_accuracy: 0.3250\n",
            "Epoch 24/30\n",
            "50/50 [==============================] - 25s 506ms/step - loss: 0.5309 - accuracy: 0.8127 - val_loss: 2.4875 - val_accuracy: 0.3625\n",
            "Epoch 25/30\n",
            "50/50 [==============================] - 25s 500ms/step - loss: 0.5570 - accuracy: 0.7772 - val_loss: 4.3749 - val_accuracy: 0.2875\n",
            "Epoch 26/30\n",
            "50/50 [==============================] - 25s 502ms/step - loss: 0.4976 - accuracy: 0.7798 - val_loss: 3.2016 - val_accuracy: 0.3500\n",
            "Epoch 27/30\n",
            "50/50 [==============================] - 25s 504ms/step - loss: 0.4678 - accuracy: 0.8380 - val_loss: 3.7860 - val_accuracy: 0.3000\n",
            "Epoch 28/30\n",
            "50/50 [==============================] - 25s 507ms/step - loss: 0.4332 - accuracy: 0.8531 - val_loss: 3.0793 - val_accuracy: 0.3625\n",
            "Epoch 29/30\n",
            "50/50 [==============================] - 25s 499ms/step - loss: 0.5162 - accuracy: 0.7854 - val_loss: 2.5958 - val_accuracy: 0.3875\n",
            "Epoch 30/30\n",
            "50/50 [==============================] - 25s 501ms/step - loss: 0.4683 - accuracy: 0.8094 - val_loss: 3.6192 - val_accuracy: 0.3875\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 729
        },
        "id": "nN4K_TG9k8hG",
        "outputId": "594a910a-a3c8-43af-def3-1b7d61f798b6"
      },
      "source": [
        "plt.figure(figsize=(10,10))\n",
        "plt.subplot(211)\n",
        "plt.title(\"Accuracy\")\n",
        "plt.plot(history.history[\"accuracy\"], color='r',label='train')\n",
        "plt.plot(history.history[\"val_accuracy\"], color='b',label='validation_acc')\n",
        "plt.legend(loc='best')\n",
        "\n",
        "\n",
        "plt.subplot(212)\n",
        "plt.title(\"Loss\")\n",
        "plt.plot(history.history[\"loss\"], color='r',label='loss')\n",
        "plt.plot(history.history[\"val_loss\"], color='b',label='validation_loss')\n",
        "plt.legend(loc='best')\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x720 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZII2O3v7rOqd",
        "outputId": "f106ddff-b913-49bf-d395-0e6aa824f106"
      },
      "source": [
        "score=New_Model.evaluate(testGen)\n",
        "print(\"Test Loss %: \",score[0])\n",
        "print(\"Test Accuracy %: \",score[1]*100)"
      ],
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "227/227 [==============================] - 4s 17ms/step - loss: 2.9292 - accuracy: 0.4537\n",
            "Test Loss %:  2.9292287826538086\n",
            "Test Accuracy %:  45.3744500875473\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xwW058oPrPxF",
        "outputId": "fe639e59-d322-4c55-93a9-eda11e79fb17"
      },
      "source": [
        "y_pred=np.argmax(New_Model.predict(testGen), axis=1)\n",
        "\n",
        "from sklearn.metrics import classification_report, confusion_matrix\n",
        "\n",
        "print('Confusion Matrix')\n",
        "print(confusion_matrix(testGen.classes, y_pred))"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Confusion Matrix\n",
            "[[70  0  0  0  0  0]\n",
            " [28  0  0  0  0  0]\n",
            " [48  0  0  0  0  0]\n",
            " [31  0  0  0  0  0]\n",
            " [20  0  0  0  0  0]\n",
            " [30  0  0  0  0  0]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UTeUrQROrTSI",
        "outputId": "184760be-daae-4bb7-b110-14eadfe88e69"
      },
      "source": [
        "print('Classification Report')\n",
        "\n",
        "target_names=['alert face', 'confused', 'neutral face', 'playful face', 'pleased face', 'scared face']\n",
        "\n",
        "print(classification_report(testGen.classes, y_pred, target_names=target_names))"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Classification Report\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "  alert face       0.31      1.00      0.47        70\n",
            "    confused       0.00      0.00      0.00        28\n",
            "neutral face       0.00      0.00      0.00        48\n",
            "playful face       0.00      0.00      0.00        31\n",
            "pleased face       0.00      0.00      0.00        20\n",
            " scared face       0.00      0.00      0.00        30\n",
            "\n",
            "    accuracy                           0.31       227\n",
            "   macro avg       0.05      0.17      0.08       227\n",
            "weighted avg       0.10      0.31      0.15       227\n",
            "\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1272: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
            "  _warn_prf(average, modifier, msg_start, len(result))\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 701
        },
        "id": "tfb-W9ezpoJc",
        "outputId": "4d343be7-f715-4a66-92b5-9a221906ec4c"
      },
      "source": [
        "import seaborn as sns\n",
        "from sklearn.metrics import classification_report, confusion_matrix\n",
        "\n",
        "y_pred=np.argmax(New_Model.predict(testGen), axis=1)\n",
        "target_names=['alert face', 'confused', 'neutral face', 'playful face', 'pleased face', 'scared face']\n",
        "\n",
        "confusion_mtx=confusion_matrix(testGen.classes, y_pred)\n",
        "f,ax=plt.subplots(figsize=(8,8))\n",
        "sns.heatmap(confusion_mtx,annot=True,linewidths=0.01,cmap=cmap,linecolor='black',ftm='.2f',ax=ax)\n",
        "plt.xLabel(\"Predicct Label\")\n",
        "plt.yLabel(\"True Label\")\n",
        "plt.title(\"Confusion Matrix\")\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-28-c6918fd7db48>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mconfusion_mtx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mconfusion_matrix\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtestGen\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclasses\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msubplots\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mheatmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconfusion_mtx\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mannot\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mlinewidths\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.01\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcmap\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcmap\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mlinecolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'black'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mftm\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'.2f'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxLabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Predicct Label\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0myLabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"True Label\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'cmap' is not defined"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 576x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}
